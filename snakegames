{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0840c71f-687b-476c-9ab2-0f12f21f14c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pygame 2.4.0 (SDL 2.26.4, Python 3.9.13)\n",
      "Hello from the pygame community. https://www.pygame.org/contribute.html\n"
     ]
    },
    {
     "ename": "error",
     "evalue": "display Surface quit",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31merror\u001b[0m                                     Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/sz/ny2_fxz55rsgs1j3077wzstc0000gn/T/ipykernel_61247/2435653442.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m    109\u001b[0m     \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mquit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 111\u001b[0;31m \u001b[0moyun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    112\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/var/folders/sz/ny2_fxz55rsgs1j3077wzstc0000gn/T/ipykernel_61247/2435653442.py\u001b[0m in \u001b[0;36moyun\u001b[0;34m()\u001b[0m\n\u001b[1;32m     51\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mevent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mKEYDOWN\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mevent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkey\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mK_r\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 53\u001b[0;31m                         \u001b[0moyun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     54\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mevent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mQUIT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/var/folders/sz/ny2_fxz55rsgs1j3077wzstc0000gn/T/ipykernel_61247/2435653442.py\u001b[0m in \u001b[0;36moyun\u001b[0;34m()\u001b[0m\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0moyun_bitti\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0moyun_sonu\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m             \u001b[0mekran\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfill\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msiyah\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m             \u001b[0mfont\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfont\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFont\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'freesansbold.ttf'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m             \u001b[0mmesaj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfont\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Oyun Bitti! Yeniden başlamak için R tuşuna basın.\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbeyaz\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31merror\u001b[0m: display Surface quit"
     ]
    }
   ],
   "source": [
    "import pygame\n",
    "import random\n",
    "\n",
    "# Ekran boyutları\n",
    "genişlik = 800\n",
    "yükseklik = 600\n",
    "\n",
    "# Yılanın başlangıç konumu ve boyutu\n",
    "baslangic_x = genişlik // 2\n",
    "baslangic_y = yükseklik // 2\n",
    "blok_boyutu = 20\n",
    "\n",
    "# Renkler\n",
    "beyaz = (255, 255, 255)\n",
    "siyah = (0, 0, 0)\n",
    "yeşil = (0, 255, 0)\n",
    "kırmızı = (255, 0, 0)\n",
    "\n",
    "pygame.init()\n",
    "ekran = pygame.display.set_mode((genişlik, yükseklik))\n",
    "pygame.display.set_caption(\"Yılan Oyunu\")\n",
    "saat = pygame.time.Clock()\n",
    "\n",
    "def oyun():\n",
    "    oyun_bitti = False\n",
    "    oyun_sonu = False\n",
    "\n",
    "    # Yılanın başlangıç pozisyonu ve hareket yönü\n",
    "    yılan_x = baslangic_x\n",
    "    yılan_y = baslangic_y\n",
    "    hareket_x = 0\n",
    "    hareket_y = 0\n",
    "\n",
    "    yılan_parçaları = []\n",
    "    yılan_uzunluğu = 1\n",
    "\n",
    "    # Yem konumu\n",
    "    yem_x = round(random.randrange(0, genişlik - blok_boyutu) / 20.0) * 20.0\n",
    "    yem_y = round(random.randrange(0, yükseklik - blok_boyutu) / 20.0) * 20.0\n",
    "\n",
    "    while not oyun_bitti:\n",
    "        while oyun_sonu:\n",
    "            ekran.fill(siyah)\n",
    "            font = pygame.font.Font('freesansbold.ttf', 30)\n",
    "            mesaj = font.render(\"Oyun Bitti! Yeniden başlamak için R tuşuna basın.\", True, beyaz)\n",
    "            mesaj_yer = mesaj.get_rect(center=(genişlik / 2, yükseklik / 2))\n",
    "            ekran.blit(mesaj, mesaj_yer)\n",
    "            pygame.display.update()\n",
    "\n",
    "            for event in pygame.event.get():\n",
    "                if event.type == pygame.KEYDOWN:\n",
    "                    if event.key == pygame.K_r:\n",
    "                        oyun()\n",
    "\n",
    "                if event.type == pygame.QUIT:\n",
    "                    oyun_bitti = True\n",
    "                    oyun_sonu = False\n",
    "\n",
    "        for event in pygame.event.get():\n",
    "            if event.type == pygame.QUIT:\n",
    "                oyun_bitti = True\n",
    "\n",
    "            if event.type == pygame.KEYDOWN:\n",
    "                if event.key == pygame.K_LEFT and hareket_x != blok_boyutu:\n",
    "                    hareket_x = -blok_boyutu\n",
    "                    hareket_y = 0\n",
    "                elif event.key == pygame.K_RIGHT and hareket_x != -blok_boyutu:\n",
    "                    hareket_x = blok_boyutu\n",
    "                    hareket_y = 0\n",
    "                elif event.key == pygame.K_UP and hareket_y != blok_boyutu:\n",
    "                    hareket_x = 0\n",
    "                    hareket_y = -blok_boyutu\n",
    "                elif event.key == pygame.K_DOWN and hareket_y != -blok_boyutu:\n",
    "                    hareket_x = 0\n",
    "                    hareket_y = blok_boyutu\n",
    "\n",
    "        if yılan_x >= genişlik or yılan_x < 0 or yılan_y >= yükseklik or yılan_y < 0:\n",
    "            oyun_sonu = True\n",
    "\n",
    "        yılan_x += hareket_x\n",
    "        yılan_y += hareket_y\n",
    "\n",
    "        ekran.fill(siyah)\n",
    "        pygame.draw.rect(ekran, yeşil, [yem_x, yem_y, blok_boyutu, blok_boyutu])\n",
    "        yılan_baş = []\n",
    "        yılan_baş.append(yılan_x)\n",
    "        yılan_baş.append(yılan_y)\n",
    "        yılan_parçaları.append(yılan_baş)\n",
    "\n",
    "        if len(yılan_parçaları) > yılan_uzunluğu:\n",
    "            del yılan_parçaları[0]\n",
    "\n",
    "        for parça in yılan_parçaları[:-1]:\n",
    "            if parça == yılan_baş:\n",
    "                oyun_sonu = True\n",
    "\n",
    "        for parça in yılan_parçaları:\n",
    "            pygame.draw.rect(ekran, yeşil, [parça[0], parça[1], blok_boyutu, blok_boyutu])\n",
    "\n",
    "        pygame.display.update()\n",
    "\n",
    "        if yılan_x == yem_x and yılan_y == yem_y:\n",
    "            yem_x = round(random.randrange(0, genişlik - blok_boyutu) / 20.0) * 20.0\n",
    "            yem_y = round(random.randrange(0, yükseklik - blok_boyutu) / 20.0) * 20.0\n",
    "            yılan_uzunluğu += 1\n",
    "\n",
    "        saat.tick(15)\n",
    "\n",
    "    pygame.quit()\n",
    "\n",
    "oyun()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5be4ad43-bf83-48c8-9dda-6e60dc37eaec",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a55d6ba9-d952-4e3e-9d23-a61c05bc94e2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
